{"ast":null,"code":"import _objectSpread from \"/home/mitu/reduxasync/striming/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport strems from \"../apis/strems\";\nimport history from \"../history\";\nexport const signIn = userId => {\n  return {\n    type: \"SIGN_IN\",\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: \"SIGN_OUT\"\n  };\n};\nexport const createStrems = formValue => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const response = await strems.post(\"/streams\", _objectSpread({}, formValue, {\n    userId\n  }));\n  dispatch({\n    type: \"CREATE_STRME\",\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const getallStrmes = () => async dispatch => {\n  const response = await strems.get(\"/streams\");\n  dispatch({\n    type: \"READ_ALL_STRME\",\n    payload: response.data\n  });\n};\nexport const fetchStrmes = id => async dispatch => {\n  const response = await strems.get(`/streams/${id}`);\n  dispatch({\n    type: \"FETCH_STRME\",\n    payload: response.data\n  });\n};\nexport const editStrems = (id, formValue) => async dispatch => {\n  const response = await strems.patch(`/streams/${id}`, formValue);\n  dispatch({\n    type: \"EDIT_STRME\",\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const deleteStrems = id => async dispatch => {\n  await strems.delete(`/streams/${id}`);\n  dispatch({\n    type: \"DELTE_STRME\",\n    payload: id\n  });\n};","map":{"version":3,"sources":["/home/mitu/reduxasync/striming/src/actions/index.js"],"names":["strems","history","signIn","userId","type","payload","signOut","createStrems","formValue","dispatch","getState","auth","response","post","data","push","getallStrmes","get","fetchStrmes","id","editStrems","patch","deleteStrems","delete"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,gBAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAE,SADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMG,YAAY,GAAIC,SAAD,IAAe,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAAA,QAC/DP,MAD+D,GACpDO,QAAQ,GAAGC,IADyC,CAC/DR,MAD+D;AAEvE,QAAMS,QAAQ,GAAG,MAAMZ,MAAM,CAACa,IAAP,CAAY,UAAZ,oBAA6BL,SAA7B;AAAwCL,IAAAA;AAAxC,KAAvB;AACAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAA1C,GAAD,CAAR;AACAb,EAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACD,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOP,QAAP,IAAoB;AACpD,QAAMG,QAAQ,GAAG,MAAMZ,MAAM,CAACiB,GAAP,CAAW,UAAX,CAAvB;AACAR,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAA5C,GAAD,CAAR;AACD,CAHM;AAIP,OAAO,MAAMI,WAAW,GAAIC,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AACrD,QAAMG,QAAQ,GAAG,MAAMZ,MAAM,CAACiB,GAAP,CAAY,YAAWE,EAAG,EAA1B,CAAvB;AACAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACD,CAHM;AAIP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKX,SAAL,KAAmB,MAAOC,QAAP,IAAoB;AAC/D,QAAMG,QAAQ,GAAG,MAAMZ,MAAM,CAACqB,KAAP,CAAc,YAAWF,EAAG,EAA5B,EAA+BX,SAA/B,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACAb,EAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACD,CAJM;AAKP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AACtD,QAAMT,MAAM,CAACuB,MAAP,CAAe,YAAWJ,EAAG,EAA7B,CAAN;AACAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEc;AAAhC,GAAD,CAAR;AACD,CAHM","sourcesContent":["import strems from \"../apis/strems\";\nimport history from \"../history\";\nexport const signIn = (userId) => {\n  return {\n    type: \"SIGN_IN\",\n    payload: userId,\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: \"SIGN_OUT\",\n  };\n};\n\nexport const createStrems = (formValue) => async (dispatch, getState) => {\n  const { userId } = getState().auth;\n  const response = await strems.post(\"/streams\", { ...formValue, userId });\n  dispatch({ type: \"CREATE_STRME\", payload: response.data });\n  history.push(\"/\");\n};\n\nexport const getallStrmes = () => async (dispatch) => {\n  const response = await strems.get(\"/streams\");\n  dispatch({ type: \"READ_ALL_STRME\", payload: response.data });\n};\nexport const fetchStrmes = (id) => async (dispatch) => {\n  const response = await strems.get(`/streams/${id}`);\n  dispatch({ type: \"FETCH_STRME\", payload: response.data });\n};\nexport const editStrems = (id, formValue) => async (dispatch) => {\n  const response = await strems.patch(`/streams/${id}`, formValue);\n  dispatch({ type: \"EDIT_STRME\", payload: response.data });\n  history.push(\"/\");\n};\nexport const deleteStrems = (id) => async (dispatch) => {\n  await strems.delete(`/streams/${id}`);\n  dispatch({ type: \"DELTE_STRME\", payload: id });\n};\n"]},"metadata":{},"sourceType":"module"}