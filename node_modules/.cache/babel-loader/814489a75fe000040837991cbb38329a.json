{"ast":null,"code":"var _jsxFileName = \"/home/mitu/reduxasync/striming/src/components/createStrems.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass CreateStream extends React.Component {\n  renderInput({\n    input,\n    lable,\n    type,\n    placeholder,\n    meta: {\n      touched,\n      error,\n      warning\n    }\n  }) {\n    return React.createElement(React.Fragment, null, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, lable), React.createElement(\"input\", Object.assign({}, input, {\n      type: type,\n      placeholder: placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })), touched && error && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, error), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  }\n\n  fromSubmit(item) {\n    console.log(item);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"auth-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"auth-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.fromSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Field, {\n      type: \"text\",\n      placeholder: \"enter title\",\n      name: \"title\",\n      component: this.renderInput,\n      lable: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Field, {\n      type: \"text\",\n      name: \"discription\",\n      placeholder: \"enter discription\",\n      component: this.renderInput,\n      lable: \"Discription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.title) {\n    errors.title = \"Required\";\n  } else if (values.title.length > 25) {\n    errors.title = \"Must be 15 characters or less\";\n  }\n\n  if (!values.discription) {\n    errors.discription = \"Required\";\n  } else if (values.discription.length > 25) {\n    errors.discription = \"Must be 15 characters or less\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"createStreame\",\n  validate: validate\n})(CreateStream);","map":{"version":3,"sources":["/home/mitu/reduxasync/striming/src/components/createStrems.js"],"names":["React","Field","reduxForm","CreateStream","Component","renderInput","input","lable","type","placeholder","meta","touched","error","warning","fromSubmit","item","console","log","render","props","handleSubmit","validate","values","errors","title","length","discription","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AACA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAAC;AACVC,IAAAA,KADU;AAEVC,IAAAA,KAFU;AAGVC,IAAAA,IAHU;AAIVC,IAAAA,WAJU;AAKVC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB;AALI,GAAD,EAMR;AACD,WACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQN,KAAR,CADF,EAEE,+CAAWD,KAAX;AAAkB,MAAA,IAAI,EAAEE,IAAxB;AAA8B,MAAA,WAAW,EAAEC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,EAGGE,OAAO,IAAIC,KAAX,IAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,KAAP,CAHvB,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAEDE,EAAAA,UAAU,CAACC,IAAD,EAAO;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKN,UAA7B,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,aAFd;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,SAAS,EAAE,KAAKT,WAJlB;AAKE,MAAA,KAAK,EAAC,OALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,WAAW,EAAC,mBAHd;AAIE,MAAA,SAAS,EAAE,KAAKA,WAJlB;AAKE,MAAA,KAAK,EAAC,aALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAgBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,CADF,CADF,CADF;AAwBD;;AA/CwC;;AAiD3C,MAAMgB,QAAQ,GAAIC,MAAD,IAAY;AAC3B,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAACD,MAAM,CAACE,KAAZ,EAAmB;AACjBD,IAAAA,MAAM,CAACC,KAAP,GAAe,UAAf;AACD,GAFD,MAEO,IAAIF,MAAM,CAACE,KAAP,CAAaC,MAAb,GAAsB,EAA1B,EAA8B;AACnCF,IAAAA,MAAM,CAACC,KAAP,GAAe,+BAAf;AACD;;AAED,MAAI,CAACF,MAAM,CAACI,WAAZ,EAAyB;AACvBH,IAAAA,MAAM,CAACG,WAAP,GAAqB,UAArB;AACD,GAFD,MAEO,IAAIJ,MAAM,CAACI,WAAP,CAAmBD,MAAnB,GAA4B,EAAhC,EAAoC;AACzCF,IAAAA,MAAM,CAACG,WAAP,GAAqB,+BAArB;AACD;;AACD,SAAOH,MAAP;AACD,CAdD;;AAeA,eAAerB,SAAS,CAAC;AACvByB,EAAAA,IAAI,EAAE,eADiB;AAEvBN,EAAAA,QAAQ,EAAEA;AAFa,CAAD,CAAT,CAGZlB,YAHY,CAAf","sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nclass CreateStream extends React.Component {\n  renderInput({\n    input,\n    lable,\n    type,\n    placeholder,\n    meta: { touched, error, warning },\n  }) {\n    return (\n      <>\n        <label>{lable}</label>\n        <input {...input} type={type} placeholder={placeholder} />\n        {touched && error && <span>{error}</span>}\n        <br />\n      </>\n    );\n  }\n\n  fromSubmit(item) {\n    console.log(item);\n  }\n\n  render() {\n    return (\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <form onSubmit={this.props.handleSubmit(this.fromSubmit)}>\n            <Field\n              type=\"text\"\n              placeholder=\"enter title\"\n              name=\"title\"\n              component={this.renderInput}\n              lable=\"Title\"\n            />\n            <Field\n              type=\"text\"\n              name=\"discription\"\n              placeholder=\"enter discription\"\n              component={this.renderInput}\n              lable=\"Discription\"\n            />\n\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nconst validate = (values) => {\n  const errors = {};\n  if (!values.title) {\n    errors.title = \"Required\";\n  } else if (values.title.length > 25) {\n    errors.title = \"Must be 15 characters or less\";\n  }\n\n  if (!values.discription) {\n    errors.discription = \"Required\";\n  } else if (values.discription.length > 25) {\n    errors.discription = \"Must be 15 characters or less\";\n  }\n  return errors;\n};\nexport default reduxForm({\n  form: \"createStreame\",\n  validate: validate,\n})(CreateStream);\n"]},"metadata":{},"sourceType":"module"}