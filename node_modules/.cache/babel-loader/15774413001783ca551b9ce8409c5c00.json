{"ast":null,"code":"import jsonplaceholder from \"../apis/jsonplaceholder\";\nimport _ from \"lodash\";\nexport const FetchPost = () => async (dispatch, getState) => {\n  const response = await jsonplaceholder.get(\"/posts\");\n  dispatch({\n    type: \"FETCH_POSTS\",\n    payload: response.data\n  });\n}; // export const FetchUsers = (id) => async (dispatch, getState) => {\n//   const response = await jsonplaceholder.get(`/users/${id}`);\n//   dispatch({ type: \"FETCH_USERS\", payload: response.data });\n// };\n\nexport const FetchUsers = () => {\n  memolizeFun();\n};\n\nconst memolizeFun = _.memoize(async (id, dispatch) => {\n  const response = await jsonplaceholder.get(`/users/${id}`);\n  dispatch({\n    type: \"FETCH_USERS\",\n    payload: response.data\n  });\n});","map":{"version":3,"sources":["/home/mitu/reduxasync/src/actions/index.js"],"names":["jsonplaceholder","_","FetchPost","dispatch","getState","response","get","type","payload","data","FetchUsers","memolizeFun","memoize","id"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,yBAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC3D,QAAMC,QAAQ,GAAG,MAAML,eAAe,CAACM,GAAhB,CAAoB,QAApB,CAAvB;AACAH,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACD,CAHM,C,CAIP;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9BC,EAAAA,WAAW;AACZ,CAFM;;AAIP,MAAMA,WAAW,GAAGV,CAAC,CAACW,OAAF,CAAU,OAAOC,EAAP,EAAWV,QAAX,KAAwB;AACpD,QAAME,QAAQ,GAAG,MAAML,eAAe,CAACM,GAAhB,CAAqB,UAASO,EAAG,EAAjC,CAAvB;AACAV,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACD,CAHmB,CAApB","sourcesContent":["import jsonplaceholder from \"../apis/jsonplaceholder\";\nimport _ from \"lodash\";\nexport const FetchPost = () => async (dispatch, getState) => {\n  const response = await jsonplaceholder.get(\"/posts\");\n  dispatch({ type: \"FETCH_POSTS\", payload: response.data });\n};\n// export const FetchUsers = (id) => async (dispatch, getState) => {\n//   const response = await jsonplaceholder.get(`/users/${id}`);\n//   dispatch({ type: \"FETCH_USERS\", payload: response.data });\n// };\n\nexport const FetchUsers = () => {\n  memolizeFun();\n};\n\nconst memolizeFun = _.memoize(async (id, dispatch) => {\n  const response = await jsonplaceholder.get(`/users/${id}`);\n  dispatch({ type: \"FETCH_USERS\", payload: response.data });\n});\n"]},"metadata":{},"sourceType":"module"}