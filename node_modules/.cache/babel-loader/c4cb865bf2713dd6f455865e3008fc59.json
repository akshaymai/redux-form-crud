{"ast":null,"code":"var _jsxFileName = \"/home/mitu/reduxasync/src/components/userHeader.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FetchUsers } from \"../actions/index\";\n\nclass Userheader extends React.Component {\n  componentDidMount() {\n    this.props.FetchUsers(this.props.id);\n  }\n\n  render() {\n    console.log(\"hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh\", this.props.users); // const user = this.props.users.find((item) => item.id === this.props.id);\n\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \" \", \"fghderfghjdfghj\");\n  }\n\n}\n\nconst mapStateToPRops = state => {\n  return {\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToPRops, {\n  FetchUsers\n})(Userheader);","map":{"version":3,"sources":["/home/mitu/reduxasync/src/components/userHeader.js"],"names":["React","connect","FetchUsers","Userheader","Component","componentDidMount","props","id","render","console","log","users","mapStateToPRops","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,UAAX,CAAsB,KAAKI,KAAL,CAAWC,EAAjC;AACD;;AACDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoD,KAAKJ,KAAL,CAAWK,KAA/D,EADO,CAEP;;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,iBAAN,CAAP;AACD;;AARsC;;AAWzC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,KAAK,EAAEE,KAAK,CAACF;AADR,GAAP;AAGD,CAJD;;AAMA,eAAeV,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FetchUsers } from \"../actions/index\";\n\nclass Userheader extends React.Component {\n  componentDidMount() {\n    this.props.FetchUsers(this.props.id);\n  }\n  render() {\n    console.log(\"hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh\", this.props.users);\n    // const user = this.props.users.find((item) => item.id === this.props.id);\n    return <h1> {\"fghderfghjdfghj\"}</h1>;\n  }\n}\n\nconst mapStateToPRops = (state) => {\n  return {\n    users: state.users,\n  };\n};\n\nexport default connect(mapStateToPRops, { FetchUsers })(Userheader);\n"]},"metadata":{},"sourceType":"module"}