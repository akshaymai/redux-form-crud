{"ast":null,"code":"import _objectSpread from \"/home/mitu/reduxasync/striming/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport strems from \"../apis/strems\"; // import history from \"../history\";\n\nimport { useHistory } from \"react-router-dom\";\nexport const signIn = userId => {\n  return {\n    type: \"SIGN_IN\",\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: \"SIGN_OUT\"\n  };\n};\nexport const createStrems = formValue => async (dispatch, getState) => {\n  let history = useHistory();\n  const userId = getState().auth.userId;\n  const response = await strems.post(\"/streams\", _objectSpread({}, formValue, {\n    userId\n  }));\n  dispatch({\n    type: \"CREATE_STRME\",\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const getallStrmes = () => async dispatch => {\n  const response = await strems.get(\"/streams\");\n  dispatch({\n    type: \"READ_ALL_STRME\",\n    payload: response.data\n  });\n};\nexport const fetchStrmes = id => async dispatch => {\n  const response = await strems.get(`/streams/${id}`);\n  dispatch({\n    type: \"FETCH_STRME\",\n    payload: response.data\n  });\n};\nexport const editStrems = (id, formValue) => async dispatch => {\n  const response = await strems.put(`/streams/${id}`, formValue);\n  dispatch({\n    type: \"EDIT_STRME\",\n    payload: response.data\n  });\n};\nexport const deleteStrems = id => async dispatch => {\n  await strems.delete(`/streams/${id}`);\n  dispatch({\n    type: \"DELTE_STRME\",\n    payload: id\n  });\n};","map":{"version":3,"sources":["/home/mitu/reduxasync/striming/src/actions/index.js"],"names":["strems","useHistory","signIn","userId","type","payload","signOut","createStrems","formValue","dispatch","getState","history","auth","response","post","data","push","getallStrmes","get","fetchStrmes","id","editStrems","put","deleteStrems","delete"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,gBAAnB,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAE,SADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMG,YAAY,GAAIC,SAAD,IAAe,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACvE,MAAIC,OAAO,GAAGV,UAAU,EAAxB;AADuE,QAE/DE,MAF+D,GAEpDO,QAAQ,GAAGE,IAFyC,CAE/DT,MAF+D;AAGvE,QAAMU,QAAQ,GAAG,MAAMb,MAAM,CAACc,IAAP,CAAY,UAAZ,oBAA6BN,SAA7B;AAAwCL,IAAAA;AAAxC,KAAvB;AACAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,OAAO,EAAEQ,QAAQ,CAACE;AAA1C,GAAD,CAAR;AACAJ,EAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACD,CANM;AAQP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOR,QAAP,IAAoB;AACpD,QAAMI,QAAQ,GAAG,MAAMb,MAAM,CAACkB,GAAP,CAAW,UAAX,CAAvB;AACAT,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,OAAO,EAAEQ,QAAQ,CAACE;AAA5C,GAAD,CAAR;AACD,CAHM;AAIP,OAAO,MAAMI,WAAW,GAAIC,EAAD,IAAQ,MAAOX,QAAP,IAAoB;AACrD,QAAMI,QAAQ,GAAG,MAAMb,MAAM,CAACkB,GAAP,CAAY,YAAWE,EAAG,EAA1B,CAAvB;AACAX,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEQ,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACD,CAHM;AAIP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKZ,SAAL,KAAmB,MAAOC,QAAP,IAAoB;AAC/D,QAAMI,QAAQ,GAAG,MAAMb,MAAM,CAACsB,GAAP,CAAY,YAAWF,EAAG,EAA1B,EAA6BZ,SAA7B,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEQ,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACD,CAHM;AAIP,OAAO,MAAMQ,YAAY,GAAIH,EAAD,IAAQ,MAAOX,QAAP,IAAoB;AACtD,QAAMT,MAAM,CAACwB,MAAP,CAAe,YAAWJ,EAAG,EAA7B,CAAN;AACAX,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEe;AAAhC,GAAD,CAAR;AACD,CAHM","sourcesContent":["import strems from \"../apis/strems\";\n// import history from \"../history\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const signIn = (userId) => {\n  return {\n    type: \"SIGN_IN\",\n    payload: userId,\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: \"SIGN_OUT\",\n  };\n};\n\nexport const createStrems = (formValue) => async (dispatch, getState) => {\n  let history = useHistory();\n  const { userId } = getState().auth;\n  const response = await strems.post(\"/streams\", { ...formValue, userId });\n  dispatch({ type: \"CREATE_STRME\", payload: response.data });\n  history.push(\"/\");\n};\n\nexport const getallStrmes = () => async (dispatch) => {\n  const response = await strems.get(\"/streams\");\n  dispatch({ type: \"READ_ALL_STRME\", payload: response.data });\n};\nexport const fetchStrmes = (id) => async (dispatch) => {\n  const response = await strems.get(`/streams/${id}`);\n  dispatch({ type: \"FETCH_STRME\", payload: response.data });\n};\nexport const editStrems = (id, formValue) => async (dispatch) => {\n  const response = await strems.put(`/streams/${id}`, formValue);\n  dispatch({ type: \"EDIT_STRME\", payload: response.data });\n};\nexport const deleteStrems = (id) => async (dispatch) => {\n  await strems.delete(`/streams/${id}`);\n  dispatch({ type: \"DELTE_STRME\", payload: id });\n};\n"]},"metadata":{},"sourceType":"module"}