{"ast":null,"code":"import _objectWithoutProperties from \"/home/mitu/reduxasync/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport CardHeaderContext from './CardHeaderContext';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  justify: false,\n  fill: false\n};\nconst Nav =\n/*#__PURE__*/\nReact.forwardRef((uncontrolledProps, ref) => {\n  const _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    activeKey: 'onSelect'\n  }),\n        _useUncontrolled$as = _useUncontrolled.as,\n        as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n        initialBsPrefix = _useUncontrolled.bsPrefix,\n        variant = _useUncontrolled.variant,\n        fill = _useUncontrolled.fill,\n        justify = _useUncontrolled.justify,\n        navbar = _useUncontrolled.navbar,\n        navbarScroll = _useUncontrolled.navbarScroll,\n        className = _useUncontrolled.className,\n        activeKey = _useUncontrolled.activeKey,\n        props = _objectWithoutProperties(_useUncontrolled, [\"as\", \"bsPrefix\", \"variant\", \"fill\", \"justify\", \"navbar\", \"navbarScroll\", \"className\", \"activeKey\"]);\n\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'nav');\n  let navbarBsPrefix;\n  let cardHeaderBsPrefix;\n  let isNavbar = false;\n  const navbarContext = useContext(NavbarContext);\n  const cardHeaderContext = useContext(CardHeaderContext);\n\n  if (navbarContext) {\n    navbarBsPrefix = navbarContext.bsPrefix;\n    isNavbar = navbar == null ? true : navbar;\n  } else if (cardHeaderContext) {\n    cardHeaderBsPrefix = cardHeaderContext.cardHeaderBsPrefix;\n  }\n\n  return (\n    /*#__PURE__*/\n    _jsx(BaseNav, {\n      as: as,\n      ref: ref,\n      activeKey: activeKey,\n      className: classNames(className, {\n        [bsPrefix]: !isNavbar,\n        [`${navbarBsPrefix}-nav`]: isNavbar,\n        [`${navbarBsPrefix}-nav-scroll`]: isNavbar && navbarScroll,\n        [`${cardHeaderBsPrefix}-${variant}`]: !!cardHeaderBsPrefix,\n        [`${bsPrefix}-${variant}`]: !!variant,\n        [`${bsPrefix}-fill`]: fill,\n        [`${bsPrefix}-justified`]: justify\n      }),\n      ...props\n    })\n  );\n});\nNav.displayName = 'Nav';\nNav.defaultProps = defaultProps;\nexport default Object.assign(Nav, {\n  Item: NavItem,\n  Link: NavLink\n});","map":{"version":3,"sources":["/home/mitu/reduxasync/node_modules/react-bootstrap/esm/Nav.js"],"names":["classNames","all","React","useContext","useUncontrolled","BaseNav","useBootstrapPrefix","NavbarContext","CardHeaderContext","NavItem","NavLink","jsx","_jsx","defaultProps","justify","fill","Nav","forwardRef","uncontrolledProps","ref","activeKey","as","initialBsPrefix","bsPrefix","variant","navbar","navbarScroll","className","props","navbarBsPrefix","cardHeaderBsPrefix","isNavbar","navbarContext","cardHeaderContext","displayName","Object","assign","Item","Link"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport CardHeaderContext from './CardHeaderContext';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  justify: false,\n  fill: false\n};\nconst Nav = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    as = 'div',\n    bsPrefix: initialBsPrefix,\n    variant,\n    fill,\n    justify,\n    navbar,\n    navbarScroll,\n    className,\n    activeKey,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'nav');\n  let navbarBsPrefix;\n  let cardHeaderBsPrefix;\n  let isNavbar = false;\n  const navbarContext = useContext(NavbarContext);\n  const cardHeaderContext = useContext(CardHeaderContext);\n\n  if (navbarContext) {\n    navbarBsPrefix = navbarContext.bsPrefix;\n    isNavbar = navbar == null ? true : navbar;\n  } else if (cardHeaderContext) {\n    ({\n      cardHeaderBsPrefix\n    } = cardHeaderContext);\n  }\n\n  return /*#__PURE__*/_jsx(BaseNav, {\n    as: as,\n    ref: ref,\n    activeKey: activeKey,\n    className: classNames(className, {\n      [bsPrefix]: !isNavbar,\n      [`${navbarBsPrefix}-nav`]: isNavbar,\n      [`${navbarBsPrefix}-nav-scroll`]: isNavbar && navbarScroll,\n      [`${cardHeaderBsPrefix}-${variant}`]: !!cardHeaderBsPrefix,\n      [`${bsPrefix}-${variant}`]: !!variant,\n      [`${bsPrefix}-fill`]: fill,\n      [`${bsPrefix}-justified`]: justify\n    }),\n    ...props\n  });\n});\nNav.displayName = 'Nav';\nNav.defaultProps = defaultProps;\nexport default Object.assign(Nav, {\n  Item: NavItem,\n  Link: NavLink\n});"]},"metadata":{},"sourceType":"module"}