{"ast":null,"code":"import _slicedToArray from \"/home/mitu/reduxasync/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { useState } from 'react';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\n\nconst Overlay =\n/*#__PURE__*/\nReact.forwardRef((props, outerRef) => {\n  const flip = props.flip,\n        offset = props.offset,\n        placement = props.placement,\n        containerPadding = props.containerPadding,\n        _props$popperConfig = props.popperConfig,\n        popperConfig = _props$popperConfig === void 0 ? {} : _props$popperConfig,\n        Transition = props.transition;\n\n  const _useCallbackRef = useCallbackRef(),\n        _useCallbackRef2 = _slicedToArray(_useCallbackRef, 2),\n        rootElement = _useCallbackRef2[0],\n        attachRef = _useCallbackRef2[1];\n\n  const _useCallbackRef3 = useCallbackRef(),\n        _useCallbackRef4 = _slicedToArray(_useCallbackRef3, 2),\n        arrowElement = _useCallbackRef4[0],\n        attachArrowRef = _useCallbackRef4[1];\n\n  const mergedRef = useMergedRefs(attachRef, outerRef);\n  const container = useWaitForDOMRef(props.container);\n  const target = useWaitForDOMRef(props.target);\n\n  const _useState = useState(!props.show),\n        _useState2 = _slicedToArray(_useState, 2),\n        exited = _useState2[0],\n        setExited = _useState2[1];\n\n  const popper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\n    placement,\n    enableEvents: !!props.show,\n    containerPadding: containerPadding || 5,\n    flip,\n    offset,\n    arrowElement,\n    popperConfig\n  }));\n\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!props.transition && !exited) {\n    setExited(true);\n  }\n\n  const handleHidden = (...args) => {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited(...args);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  const mountOverlay = props.show || Transition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  let child = props.children(Object.assign({}, popper.attributes.popper, {\n    style: popper.styles.popper,\n    ref: mergedRef\n  }), {\n    popper,\n    placement,\n    show: !!props.show,\n    arrowProps: Object.assign({}, popper.attributes.arrow, {\n      style: popper.styles.arrow,\n      ref: attachArrowRef\n    })\n  });\n\n  if (Transition) {\n    const onExit = props.onExit,\n          onExiting = props.onExiting,\n          onEnter = props.onEnter,\n          onEntering = props.onEntering,\n          onEntered = props.onEntered;\n    child =\n    /*#__PURE__*/\n    _jsx(Transition, {\n      in: props.show,\n      appear: true,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: child\n    });\n  }\n\n  return container ?\n  /*#__PURE__*/\n  ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nexport default Overlay;","map":{"version":3,"sources":["/home/mitu/reduxasync/node_modules/@restart/ui/esm/Overlay.js"],"names":["React","ReactDOM","useCallbackRef","useMergedRefs","useState","usePopper","useRootClose","useWaitForDOMRef","mergeOptionsWithPopperConfig","jsx","_jsx","Overlay","forwardRef","props","outerRef","flip","offset","placement","containerPadding","popperConfig","Transition","transition","rootElement","attachRef","arrowElement","attachArrowRef","mergedRef","container","target","show","exited","setExited","popper","enableEvents","handleHidden","args","onExited","mountOverlay","onHide","disabled","rootClose","rootCloseDisabled","clickTrigger","rootCloseEvent","child","children","Object","assign","attributes","style","styles","ref","arrowProps","arrow","onExit","onExiting","onEnter","onEntering","onEntered","in","appear","createPortal","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { useState } from 'react';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\nconst Overlay = /*#__PURE__*/React.forwardRef((props, outerRef) => {\n  const {\n    flip,\n    offset,\n    placement,\n    containerPadding,\n    popperConfig = {},\n    transition: Transition\n  } = props;\n  const [rootElement, attachRef] = useCallbackRef();\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(attachRef, outerRef);\n  const container = useWaitForDOMRef(props.container);\n  const target = useWaitForDOMRef(props.target);\n  const [exited, setExited] = useState(!props.show);\n  const popper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\n    placement,\n    enableEvents: !!props.show,\n    containerPadding: containerPadding || 5,\n    flip,\n    offset,\n    arrowElement,\n    popperConfig\n  }));\n\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!props.transition && !exited) {\n    setExited(true);\n  }\n\n  const handleHidden = (...args) => {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited(...args);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  const mountOverlay = props.show || Transition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  let child = props.children(Object.assign({}, popper.attributes.popper, {\n    style: popper.styles.popper,\n    ref: mergedRef\n  }), {\n    popper,\n    placement,\n    show: !!props.show,\n    arrowProps: Object.assign({}, popper.attributes.arrow, {\n      style: popper.styles.arrow,\n      ref: attachArrowRef\n    })\n  });\n\n  if (Transition) {\n    const {\n      onExit,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = props;\n    child = /*#__PURE__*/_jsx(Transition, {\n      in: props.show,\n      appear: true,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: child\n    });\n  }\n\n  return container ? /*#__PURE__*/ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nexport default Overlay;"]},"metadata":{},"sourceType":"module"}